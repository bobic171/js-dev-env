{"version":3,"sources":["webpack:///vendor.7e5a5ced32270878f6e7.js","webpack:///webpack/bootstrap e639d4edf25afe9c5eb9","webpack:///./src/vendor.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift","1","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","0","appendChild","m","c","_interopRequireDefault","obj","__esModule","default","_whatwgFetch","self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","done","support","iterable","Symbol","Headers","headers","this","map","forEach","append","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","ArrayBuffer","Error","get","set","rejected","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","options","url","credentials","mode","referrer","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","pairs","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","fetch","list","values","getAll","has","hasOwnProperty","thisArg","keys","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"vendor.7e5a5ced32270878f6e7.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/ \t\tif(moreModules[0]) {\n/******/ \t\t\tinstalledModules[0] = 0;\n/******/ \t\t\treturn __webpack_require__(0);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t1:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({\"0\":\"main\"}[chunkId]||chunkId) + \".\" + {\"0\":\"55edc2bcc9d40d0c7ff0\"}[chunkId] + \".js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _whatwgFetch = __webpack_require__(4);\n\t\n\tvar _whatwgFetch2 = _interopRequireDefault(_whatwgFetch);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */\n/***/ function(module, exports) {\n\n\t(function(self) {\r\n\t  'use strict';\r\n\t\r\n\t  if (self.fetch) {\r\n\t    return\r\n\t  }\r\n\t\r\n\t  var support = {\r\n\t    searchParams: 'URLSearchParams' in self,\r\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\r\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\r\n\t      try {\r\n\t        new Blob()\r\n\t        return true\r\n\t      } catch(e) {\r\n\t        return false\r\n\t      }\r\n\t    })(),\r\n\t    formData: 'FormData' in self,\r\n\t    arrayBuffer: 'ArrayBuffer' in self\r\n\t  }\r\n\t\r\n\t  function normalizeName(name) {\r\n\t    if (typeof name !== 'string') {\r\n\t      name = String(name)\r\n\t    }\r\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\r\n\t      throw new TypeError('Invalid character in header field name')\r\n\t    }\r\n\t    return name.toLowerCase()\r\n\t  }\r\n\t\r\n\t  function normalizeValue(value) {\r\n\t    if (typeof value !== 'string') {\r\n\t      value = String(value)\r\n\t    }\r\n\t    return value\r\n\t  }\r\n\t\r\n\t  // Build a destructive iterator for the value list\r\n\t  function iteratorFor(items) {\r\n\t    var iterator = {\r\n\t      next: function() {\r\n\t        var value = items.shift()\r\n\t        return {done: value === undefined, value: value}\r\n\t      }\r\n\t    }\r\n\t\r\n\t    if (support.iterable) {\r\n\t      iterator[Symbol.iterator] = function() {\r\n\t        return iterator\r\n\t      }\r\n\t    }\r\n\t\r\n\t    return iterator\r\n\t  }\r\n\t\r\n\t  function Headers(headers) {\r\n\t    this.map = {}\r\n\t\r\n\t    if (headers instanceof Headers) {\r\n\t      headers.forEach(function(value, name) {\r\n\t        this.append(name, value)\r\n\t      }, this)\r\n\t\r\n\t    } else if (headers) {\r\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\r\n\t        this.append(name, headers[name])\r\n\t      }, this)\r\n\t    }\r\n\t  }\r\n\t\r\n\t  Headers.prototype.append = function(name, value) {\r\n\t    name = normalizeName(name)\r\n\t    value = normalizeValue(value)\r\n\t    var list = this.map[name]\r\n\t    if (!list) {\r\n\t      list = []\r\n\t      this.map[name] = list\r\n\t    }\r\n\t    list.push(value)\r\n\t  }\r\n\t\r\n\t  Headers.prototype['delete'] = function(name) {\r\n\t    delete this.map[normalizeName(name)]\r\n\t  }\r\n\t\r\n\t  Headers.prototype.get = function(name) {\r\n\t    var values = this.map[normalizeName(name)]\r\n\t    return values ? values[0] : null\r\n\t  }\r\n\t\r\n\t  Headers.prototype.getAll = function(name) {\r\n\t    return this.map[normalizeName(name)] || []\r\n\t  }\r\n\t\r\n\t  Headers.prototype.has = function(name) {\r\n\t    return this.map.hasOwnProperty(normalizeName(name))\r\n\t  }\r\n\t\r\n\t  Headers.prototype.set = function(name, value) {\r\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\r\n\t  }\r\n\t\r\n\t  Headers.prototype.forEach = function(callback, thisArg) {\r\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\r\n\t      this.map[name].forEach(function(value) {\r\n\t        callback.call(thisArg, value, name, this)\r\n\t      }, this)\r\n\t    }, this)\r\n\t  }\r\n\t\r\n\t  Headers.prototype.keys = function() {\r\n\t    var items = []\r\n\t    this.forEach(function(value, name) { items.push(name) })\r\n\t    return iteratorFor(items)\r\n\t  }\r\n\t\r\n\t  Headers.prototype.values = function() {\r\n\t    var items = []\r\n\t    this.forEach(function(value) { items.push(value) })\r\n\t    return iteratorFor(items)\r\n\t  }\r\n\t\r\n\t  Headers.prototype.entries = function() {\r\n\t    var items = []\r\n\t    this.forEach(function(value, name) { items.push([name, value]) })\r\n\t    return iteratorFor(items)\r\n\t  }\r\n\t\r\n\t  if (support.iterable) {\r\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\r\n\t  }\r\n\t\r\n\t  function consumed(body) {\r\n\t    if (body.bodyUsed) {\r\n\t      return Promise.reject(new TypeError('Already read'))\r\n\t    }\r\n\t    body.bodyUsed = true\r\n\t  }\r\n\t\r\n\t  function fileReaderReady(reader) {\r\n\t    return new Promise(function(resolve, reject) {\r\n\t      reader.onload = function() {\r\n\t        resolve(reader.result)\r\n\t      }\r\n\t      reader.onerror = function() {\r\n\t        reject(reader.error)\r\n\t      }\r\n\t    })\r\n\t  }\r\n\t\r\n\t  function readBlobAsArrayBuffer(blob) {\r\n\t    var reader = new FileReader()\r\n\t    reader.readAsArrayBuffer(blob)\r\n\t    return fileReaderReady(reader)\r\n\t  }\r\n\t\r\n\t  function readBlobAsText(blob) {\r\n\t    var reader = new FileReader()\r\n\t    reader.readAsText(blob)\r\n\t    return fileReaderReady(reader)\r\n\t  }\r\n\t\r\n\t  function Body() {\r\n\t    this.bodyUsed = false\r\n\t\r\n\t    this._initBody = function(body) {\r\n\t      this._bodyInit = body\r\n\t      if (typeof body === 'string') {\r\n\t        this._bodyText = body\r\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\r\n\t        this._bodyBlob = body\r\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\r\n\t        this._bodyFormData = body\r\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n\t        this._bodyText = body.toString()\r\n\t      } else if (!body) {\r\n\t        this._bodyText = ''\r\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\r\n\t        // Only support ArrayBuffers for POST method.\r\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\r\n\t      } else {\r\n\t        throw new Error('unsupported BodyInit type')\r\n\t      }\r\n\t\r\n\t      if (!this.headers.get('content-type')) {\r\n\t        if (typeof body === 'string') {\r\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\r\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\r\n\t          this.headers.set('content-type', this._bodyBlob.type)\r\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t    if (support.blob) {\r\n\t      this.blob = function() {\r\n\t        var rejected = consumed(this)\r\n\t        if (rejected) {\r\n\t          return rejected\r\n\t        }\r\n\t\r\n\t        if (this._bodyBlob) {\r\n\t          return Promise.resolve(this._bodyBlob)\r\n\t        } else if (this._bodyFormData) {\r\n\t          throw new Error('could not read FormData body as blob')\r\n\t        } else {\r\n\t          return Promise.resolve(new Blob([this._bodyText]))\r\n\t        }\r\n\t      }\r\n\t\r\n\t      this.arrayBuffer = function() {\r\n\t        return this.blob().then(readBlobAsArrayBuffer)\r\n\t      }\r\n\t\r\n\t      this.text = function() {\r\n\t        var rejected = consumed(this)\r\n\t        if (rejected) {\r\n\t          return rejected\r\n\t        }\r\n\t\r\n\t        if (this._bodyBlob) {\r\n\t          return readBlobAsText(this._bodyBlob)\r\n\t        } else if (this._bodyFormData) {\r\n\t          throw new Error('could not read FormData body as text')\r\n\t        } else {\r\n\t          return Promise.resolve(this._bodyText)\r\n\t        }\r\n\t      }\r\n\t    } else {\r\n\t      this.text = function() {\r\n\t        var rejected = consumed(this)\r\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\r\n\t      }\r\n\t    }\r\n\t\r\n\t    if (support.formData) {\r\n\t      this.formData = function() {\r\n\t        return this.text().then(decode)\r\n\t      }\r\n\t    }\r\n\t\r\n\t    this.json = function() {\r\n\t      return this.text().then(JSON.parse)\r\n\t    }\r\n\t\r\n\t    return this\r\n\t  }\r\n\t\r\n\t  // HTTP methods whose capitalization should be normalized\r\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\r\n\t\r\n\t  function normalizeMethod(method) {\r\n\t    var upcased = method.toUpperCase()\r\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\r\n\t  }\r\n\t\r\n\t  function Request(input, options) {\r\n\t    options = options || {}\r\n\t    var body = options.body\r\n\t    if (Request.prototype.isPrototypeOf(input)) {\r\n\t      if (input.bodyUsed) {\r\n\t        throw new TypeError('Already read')\r\n\t      }\r\n\t      this.url = input.url\r\n\t      this.credentials = input.credentials\r\n\t      if (!options.headers) {\r\n\t        this.headers = new Headers(input.headers)\r\n\t      }\r\n\t      this.method = input.method\r\n\t      this.mode = input.mode\r\n\t      if (!body) {\r\n\t        body = input._bodyInit\r\n\t        input.bodyUsed = true\r\n\t      }\r\n\t    } else {\r\n\t      this.url = input\r\n\t    }\r\n\t\r\n\t    this.credentials = options.credentials || this.credentials || 'omit'\r\n\t    if (options.headers || !this.headers) {\r\n\t      this.headers = new Headers(options.headers)\r\n\t    }\r\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\r\n\t    this.mode = options.mode || this.mode || null\r\n\t    this.referrer = null\r\n\t\r\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\r\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\r\n\t    }\r\n\t    this._initBody(body)\r\n\t  }\r\n\t\r\n\t  Request.prototype.clone = function() {\r\n\t    return new Request(this)\r\n\t  }\r\n\t\r\n\t  function decode(body) {\r\n\t    var form = new FormData()\r\n\t    body.trim().split('&').forEach(function(bytes) {\r\n\t      if (bytes) {\r\n\t        var split = bytes.split('=')\r\n\t        var name = split.shift().replace(/\\+/g, ' ')\r\n\t        var value = split.join('=').replace(/\\+/g, ' ')\r\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\r\n\t      }\r\n\t    })\r\n\t    return form\r\n\t  }\r\n\t\r\n\t  function headers(xhr) {\r\n\t    var head = new Headers()\r\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\r\n\t    pairs.forEach(function(header) {\r\n\t      var split = header.trim().split(':')\r\n\t      var key = split.shift().trim()\r\n\t      var value = split.join(':').trim()\r\n\t      head.append(key, value)\r\n\t    })\r\n\t    return head\r\n\t  }\r\n\t\r\n\t  Body.call(Request.prototype)\r\n\t\r\n\t  function Response(bodyInit, options) {\r\n\t    if (!options) {\r\n\t      options = {}\r\n\t    }\r\n\t\r\n\t    this.type = 'default'\r\n\t    this.status = options.status\r\n\t    this.ok = this.status >= 200 && this.status < 300\r\n\t    this.statusText = options.statusText\r\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\r\n\t    this.url = options.url || ''\r\n\t    this._initBody(bodyInit)\r\n\t  }\r\n\t\r\n\t  Body.call(Response.prototype)\r\n\t\r\n\t  Response.prototype.clone = function() {\r\n\t    return new Response(this._bodyInit, {\r\n\t      status: this.status,\r\n\t      statusText: this.statusText,\r\n\t      headers: new Headers(this.headers),\r\n\t      url: this.url\r\n\t    })\r\n\t  }\r\n\t\r\n\t  Response.error = function() {\r\n\t    var response = new Response(null, {status: 0, statusText: ''})\r\n\t    response.type = 'error'\r\n\t    return response\r\n\t  }\r\n\t\r\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\r\n\t\r\n\t  Response.redirect = function(url, status) {\r\n\t    if (redirectStatuses.indexOf(status) === -1) {\r\n\t      throw new RangeError('Invalid status code')\r\n\t    }\r\n\t\r\n\t    return new Response(null, {status: status, headers: {location: url}})\r\n\t  }\r\n\t\r\n\t  self.Headers = Headers\r\n\t  self.Request = Request\r\n\t  self.Response = Response\r\n\t\r\n\t  self.fetch = function(input, init) {\r\n\t    return new Promise(function(resolve, reject) {\r\n\t      var request\r\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\r\n\t        request = input\r\n\t      } else {\r\n\t        request = new Request(input, init)\r\n\t      }\r\n\t\r\n\t      var xhr = new XMLHttpRequest()\r\n\t\r\n\t      function responseURL() {\r\n\t        if ('responseURL' in xhr) {\r\n\t          return xhr.responseURL\r\n\t        }\r\n\t\r\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\r\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\r\n\t          return xhr.getResponseHeader('X-Request-URL')\r\n\t        }\r\n\t\r\n\t        return\r\n\t      }\r\n\t\r\n\t      xhr.onload = function() {\r\n\t        var options = {\r\n\t          status: xhr.status,\r\n\t          statusText: xhr.statusText,\r\n\t          headers: headers(xhr),\r\n\t          url: responseURL()\r\n\t        }\r\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\r\n\t        resolve(new Response(body, options))\r\n\t      }\r\n\t\r\n\t      xhr.onerror = function() {\r\n\t        reject(new TypeError('Network request failed'))\r\n\t      }\r\n\t\r\n\t      xhr.ontimeout = function() {\r\n\t        reject(new TypeError('Network request failed'))\r\n\t      }\r\n\t\r\n\t      xhr.open(request.method, request.url, true)\r\n\t\r\n\t      if (request.credentials === 'include') {\r\n\t        xhr.withCredentials = true\r\n\t      }\r\n\t\r\n\t      if ('responseType' in xhr && support.blob) {\r\n\t        xhr.responseType = 'blob'\r\n\t      }\r\n\t\r\n\t      request.headers.forEach(function(value, name) {\r\n\t        xhr.setRequestHeader(name, value)\r\n\t      })\r\n\t\r\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\r\n\t    })\r\n\t  }\r\n\t  self.fetch.polyfill = true\r\n\t})(typeof self !== 'undefined' ? self : this);\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** vendor.7e5a5ced32270878f6e7.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n \t\tif(moreModules[0]) {\n \t\t\tinstalledModules[0] = 0;\n \t\t\treturn __webpack_require__(0);\n \t\t}\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t1:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + ({\"0\":\"main\"}[chunkId]||chunkId) + \".\" + {\"0\":\"55edc2bcc9d40d0c7ff0\"}[chunkId] + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e639d4edf25afe9c5eb9\n **/","/* eslint-disable no-unused-vars */\n\nimport fetch from'whatwg-fetch';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vendor.js\n **/","(function(self) {\r\n  'use strict';\r\n\r\n  if (self.fetch) {\r\n    return\r\n  }\r\n\r\n  var support = {\r\n    searchParams: 'URLSearchParams' in self,\r\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\r\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\r\n      try {\r\n        new Blob()\r\n        return true\r\n      } catch(e) {\r\n        return false\r\n      }\r\n    })(),\r\n    formData: 'FormData' in self,\r\n    arrayBuffer: 'ArrayBuffer' in self\r\n  }\r\n\r\n  function normalizeName(name) {\r\n    if (typeof name !== 'string') {\r\n      name = String(name)\r\n    }\r\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\r\n      throw new TypeError('Invalid character in header field name')\r\n    }\r\n    return name.toLowerCase()\r\n  }\r\n\r\n  function normalizeValue(value) {\r\n    if (typeof value !== 'string') {\r\n      value = String(value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  // Build a destructive iterator for the value list\r\n  function iteratorFor(items) {\r\n    var iterator = {\r\n      next: function() {\r\n        var value = items.shift()\r\n        return {done: value === undefined, value: value}\r\n      }\r\n    }\r\n\r\n    if (support.iterable) {\r\n      iterator[Symbol.iterator] = function() {\r\n        return iterator\r\n      }\r\n    }\r\n\r\n    return iterator\r\n  }\r\n\r\n  function Headers(headers) {\r\n    this.map = {}\r\n\r\n    if (headers instanceof Headers) {\r\n      headers.forEach(function(value, name) {\r\n        this.append(name, value)\r\n      }, this)\r\n\r\n    } else if (headers) {\r\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\r\n        this.append(name, headers[name])\r\n      }, this)\r\n    }\r\n  }\r\n\r\n  Headers.prototype.append = function(name, value) {\r\n    name = normalizeName(name)\r\n    value = normalizeValue(value)\r\n    var list = this.map[name]\r\n    if (!list) {\r\n      list = []\r\n      this.map[name] = list\r\n    }\r\n    list.push(value)\r\n  }\r\n\r\n  Headers.prototype['delete'] = function(name) {\r\n    delete this.map[normalizeName(name)]\r\n  }\r\n\r\n  Headers.prototype.get = function(name) {\r\n    var values = this.map[normalizeName(name)]\r\n    return values ? values[0] : null\r\n  }\r\n\r\n  Headers.prototype.getAll = function(name) {\r\n    return this.map[normalizeName(name)] || []\r\n  }\r\n\r\n  Headers.prototype.has = function(name) {\r\n    return this.map.hasOwnProperty(normalizeName(name))\r\n  }\r\n\r\n  Headers.prototype.set = function(name, value) {\r\n    this.map[normalizeName(name)] = [normalizeValue(value)]\r\n  }\r\n\r\n  Headers.prototype.forEach = function(callback, thisArg) {\r\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\r\n      this.map[name].forEach(function(value) {\r\n        callback.call(thisArg, value, name, this)\r\n      }, this)\r\n    }, this)\r\n  }\r\n\r\n  Headers.prototype.keys = function() {\r\n    var items = []\r\n    this.forEach(function(value, name) { items.push(name) })\r\n    return iteratorFor(items)\r\n  }\r\n\r\n  Headers.prototype.values = function() {\r\n    var items = []\r\n    this.forEach(function(value) { items.push(value) })\r\n    return iteratorFor(items)\r\n  }\r\n\r\n  Headers.prototype.entries = function() {\r\n    var items = []\r\n    this.forEach(function(value, name) { items.push([name, value]) })\r\n    return iteratorFor(items)\r\n  }\r\n\r\n  if (support.iterable) {\r\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\r\n  }\r\n\r\n  function consumed(body) {\r\n    if (body.bodyUsed) {\r\n      return Promise.reject(new TypeError('Already read'))\r\n    }\r\n    body.bodyUsed = true\r\n  }\r\n\r\n  function fileReaderReady(reader) {\r\n    return new Promise(function(resolve, reject) {\r\n      reader.onload = function() {\r\n        resolve(reader.result)\r\n      }\r\n      reader.onerror = function() {\r\n        reject(reader.error)\r\n      }\r\n    })\r\n  }\r\n\r\n  function readBlobAsArrayBuffer(blob) {\r\n    var reader = new FileReader()\r\n    reader.readAsArrayBuffer(blob)\r\n    return fileReaderReady(reader)\r\n  }\r\n\r\n  function readBlobAsText(blob) {\r\n    var reader = new FileReader()\r\n    reader.readAsText(blob)\r\n    return fileReaderReady(reader)\r\n  }\r\n\r\n  function Body() {\r\n    this.bodyUsed = false\r\n\r\n    this._initBody = function(body) {\r\n      this._bodyInit = body\r\n      if (typeof body === 'string') {\r\n        this._bodyText = body\r\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\r\n        this._bodyBlob = body\r\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\r\n        this._bodyFormData = body\r\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n        this._bodyText = body.toString()\r\n      } else if (!body) {\r\n        this._bodyText = ''\r\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\r\n        // Only support ArrayBuffers for POST method.\r\n        // Receiving ArrayBuffers happens via Blobs, instead.\r\n      } else {\r\n        throw new Error('unsupported BodyInit type')\r\n      }\r\n\r\n      if (!this.headers.get('content-type')) {\r\n        if (typeof body === 'string') {\r\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\r\n        } else if (this._bodyBlob && this._bodyBlob.type) {\r\n          this.headers.set('content-type', this._bodyBlob.type)\r\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\r\n        }\r\n      }\r\n    }\r\n\r\n    if (support.blob) {\r\n      this.blob = function() {\r\n        var rejected = consumed(this)\r\n        if (rejected) {\r\n          return rejected\r\n        }\r\n\r\n        if (this._bodyBlob) {\r\n          return Promise.resolve(this._bodyBlob)\r\n        } else if (this._bodyFormData) {\r\n          throw new Error('could not read FormData body as blob')\r\n        } else {\r\n          return Promise.resolve(new Blob([this._bodyText]))\r\n        }\r\n      }\r\n\r\n      this.arrayBuffer = function() {\r\n        return this.blob().then(readBlobAsArrayBuffer)\r\n      }\r\n\r\n      this.text = function() {\r\n        var rejected = consumed(this)\r\n        if (rejected) {\r\n          return rejected\r\n        }\r\n\r\n        if (this._bodyBlob) {\r\n          return readBlobAsText(this._bodyBlob)\r\n        } else if (this._bodyFormData) {\r\n          throw new Error('could not read FormData body as text')\r\n        } else {\r\n          return Promise.resolve(this._bodyText)\r\n        }\r\n      }\r\n    } else {\r\n      this.text = function() {\r\n        var rejected = consumed(this)\r\n        return rejected ? rejected : Promise.resolve(this._bodyText)\r\n      }\r\n    }\r\n\r\n    if (support.formData) {\r\n      this.formData = function() {\r\n        return this.text().then(decode)\r\n      }\r\n    }\r\n\r\n    this.json = function() {\r\n      return this.text().then(JSON.parse)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // HTTP methods whose capitalization should be normalized\r\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\r\n\r\n  function normalizeMethod(method) {\r\n    var upcased = method.toUpperCase()\r\n    return (methods.indexOf(upcased) > -1) ? upcased : method\r\n  }\r\n\r\n  function Request(input, options) {\r\n    options = options || {}\r\n    var body = options.body\r\n    if (Request.prototype.isPrototypeOf(input)) {\r\n      if (input.bodyUsed) {\r\n        throw new TypeError('Already read')\r\n      }\r\n      this.url = input.url\r\n      this.credentials = input.credentials\r\n      if (!options.headers) {\r\n        this.headers = new Headers(input.headers)\r\n      }\r\n      this.method = input.method\r\n      this.mode = input.mode\r\n      if (!body) {\r\n        body = input._bodyInit\r\n        input.bodyUsed = true\r\n      }\r\n    } else {\r\n      this.url = input\r\n    }\r\n\r\n    this.credentials = options.credentials || this.credentials || 'omit'\r\n    if (options.headers || !this.headers) {\r\n      this.headers = new Headers(options.headers)\r\n    }\r\n    this.method = normalizeMethod(options.method || this.method || 'GET')\r\n    this.mode = options.mode || this.mode || null\r\n    this.referrer = null\r\n\r\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\r\n      throw new TypeError('Body not allowed for GET or HEAD requests')\r\n    }\r\n    this._initBody(body)\r\n  }\r\n\r\n  Request.prototype.clone = function() {\r\n    return new Request(this)\r\n  }\r\n\r\n  function decode(body) {\r\n    var form = new FormData()\r\n    body.trim().split('&').forEach(function(bytes) {\r\n      if (bytes) {\r\n        var split = bytes.split('=')\r\n        var name = split.shift().replace(/\\+/g, ' ')\r\n        var value = split.join('=').replace(/\\+/g, ' ')\r\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\r\n      }\r\n    })\r\n    return form\r\n  }\r\n\r\n  function headers(xhr) {\r\n    var head = new Headers()\r\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\r\n    pairs.forEach(function(header) {\r\n      var split = header.trim().split(':')\r\n      var key = split.shift().trim()\r\n      var value = split.join(':').trim()\r\n      head.append(key, value)\r\n    })\r\n    return head\r\n  }\r\n\r\n  Body.call(Request.prototype)\r\n\r\n  function Response(bodyInit, options) {\r\n    if (!options) {\r\n      options = {}\r\n    }\r\n\r\n    this.type = 'default'\r\n    this.status = options.status\r\n    this.ok = this.status >= 200 && this.status < 300\r\n    this.statusText = options.statusText\r\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\r\n    this.url = options.url || ''\r\n    this._initBody(bodyInit)\r\n  }\r\n\r\n  Body.call(Response.prototype)\r\n\r\n  Response.prototype.clone = function() {\r\n    return new Response(this._bodyInit, {\r\n      status: this.status,\r\n      statusText: this.statusText,\r\n      headers: new Headers(this.headers),\r\n      url: this.url\r\n    })\r\n  }\r\n\r\n  Response.error = function() {\r\n    var response = new Response(null, {status: 0, statusText: ''})\r\n    response.type = 'error'\r\n    return response\r\n  }\r\n\r\n  var redirectStatuses = [301, 302, 303, 307, 308]\r\n\r\n  Response.redirect = function(url, status) {\r\n    if (redirectStatuses.indexOf(status) === -1) {\r\n      throw new RangeError('Invalid status code')\r\n    }\r\n\r\n    return new Response(null, {status: status, headers: {location: url}})\r\n  }\r\n\r\n  self.Headers = Headers\r\n  self.Request = Request\r\n  self.Response = Response\r\n\r\n  self.fetch = function(input, init) {\r\n    return new Promise(function(resolve, reject) {\r\n      var request\r\n      if (Request.prototype.isPrototypeOf(input) && !init) {\r\n        request = input\r\n      } else {\r\n        request = new Request(input, init)\r\n      }\r\n\r\n      var xhr = new XMLHttpRequest()\r\n\r\n      function responseURL() {\r\n        if ('responseURL' in xhr) {\r\n          return xhr.responseURL\r\n        }\r\n\r\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\r\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\r\n          return xhr.getResponseHeader('X-Request-URL')\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      xhr.onload = function() {\r\n        var options = {\r\n          status: xhr.status,\r\n          statusText: xhr.statusText,\r\n          headers: headers(xhr),\r\n          url: responseURL()\r\n        }\r\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\r\n        resolve(new Response(body, options))\r\n      }\r\n\r\n      xhr.onerror = function() {\r\n        reject(new TypeError('Network request failed'))\r\n      }\r\n\r\n      xhr.ontimeout = function() {\r\n        reject(new TypeError('Network request failed'))\r\n      }\r\n\r\n      xhr.open(request.method, request.url, true)\r\n\r\n      if (request.credentials === 'include') {\r\n        xhr.withCredentials = true\r\n      }\r\n\r\n      if ('responseType' in xhr && support.blob) {\r\n        xhr.responseType = 'blob'\r\n      }\r\n\r\n      request.headers.forEach(function(value, name) {\r\n        xhr.setRequestHeader(name, value)\r\n      })\r\n\r\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\r\n    })\r\n  }\r\n  self.fetch.polyfill = true\r\n})(typeof self !== 'undefined' ? self : this);\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 4\n ** module chunks = 1\n **/"],"sourceRoot":""}